@model DotNetPaging.PagedResultBase
@{
    var urlTemplate = Model.LinkTemplate;
    var request = ViewContext.HttpContext.Request;
    foreach (var key in request.Query.Keys)
    {
        if (key == "page")
        {
            continue;
        }

        urlTemplate += "&" + key + "=" + request.Query[key];
    }

    var startIndex = Math.Max(Model.CurrentPage - 5, 1);
    var finishIndex = Math.Min(Model.CurrentPage + 5, Model.PageCount);
}

<div class="row">
    <div class="col-md-8 col-sm-8">
        @if (Model.PageCount > 1)
        {
            <ul class="pagination">
                <li><a href="@urlTemplate.Replace("%7B0%7D", "1")">&laquo;</a></li>
                @for (var i = startIndex; i <= finishIndex; i++)
                {
                    @if (i == Model.CurrentPage)
                    {

                        <li class="active"><span>@i</span></li>
                    }
                    else
                    {

                        <li><a href="@urlTemplate.Replace("%7B0%7D", i.ToString())">@i</a></li>
                    }
                }
                <li><a href="@urlTemplate.Replace("%7B0%7D", Model.PageCount.ToString())">&raquo;</a></li>
            </ul>}
    </div>
</div>