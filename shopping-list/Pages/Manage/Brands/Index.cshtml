@page
@model shopping_list.WebApp.Pages.Manage.Brands.IndexModel
@{
    ViewData["Title"] = "Manage Brands";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<table>
    <tr>
        <td><h2>@ViewData["Title"]</h2></td>
        <td><a asp-page="Create" class="btn btn-default" style="margin-left: 10px;">Create New</a></td>
    </tr>
</table>

<form asp-page="./Index" method="get">
    <div>
        <p>
            Find by name: <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-default" /> | <a asp-page="./Index">Back to full list</a>
        </p>
    </div>
</form>

<table class="Grid">
    <tr>
        <th style="width: 15%;">
            <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort"
               asp-route-currentFilter="@Model.CurrentFilter">
                @Html.DisplayNameFor(x => x.Brands[0].BrandName)
            </a>
        </th>
        <th style="width: 40%;">
            @Html.DisplayNameFor(x => x.Brands[0].BrandNotes)
        </th>
        <th style="width: 15%;">@Html.DisplayNameFor(x => x.Brands[0].BrandWebsite)</th>
        <th style="width: 15%;">Offers</th>
        <th></th>
    </tr>
    @foreach (var b in Model.Brands)
    {
        <tr>
            <td>
                @Html.DisplayFor(x => b.BrandName)
            </td>
            <td>
                @Html.DisplayFor(x => b.BrandNotes)
            </td>
            <td>
                <a target="_blank" href="@b.BrandWebsite">@Html.DisplayFor(x => b.BrandWebsite)</a>
            </td>
            <td>
                <ul>
                    @foreach (shopping_list.DataLayer.Item i in Model.GetItems(b.BrandId).OrderBy(x => x.ItemName))
                    {
                        <li>@i.ItemName</li>
                    }
                </ul>
            </td>
            <td style="text-align: center;">
                <a asp-page="./Edit" asp-route-id="@b.BrandId">Edit</a> |
                <a asp-page="./Delete" asp-route-id="@b.BrandId">Delete</a>
            </td>
        </tr>
    }
</table>

@{
    var prevDisabled = !Model.Brands.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Brands.HasNextPage ? "disabled" : "";
}

<br />

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Brands.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Brands.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @nextDisabled">
    Next
</a>
